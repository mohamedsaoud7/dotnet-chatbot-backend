// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using chatbot_backend.Data;

#nullable disable

namespace chatbot_backend.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240610114310_AddFeedbackModel")]
    partial class AddFeedbackModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("Latin1_General_CI_AI")
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("chatbot_backend.Models.DamageReason", b =>
                {
                    b.Property<Guid>("DrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DR_Id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("DrCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("DR_Code");

                    b.Property<string>("DrCreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("DR_CreatedBy");

                    b.Property<DateTime>("DrCreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("DR_CreatedDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("DrInactive")
                        .HasColumnType("bit")
                        .HasColumnName("DR_Inactive");

                    b.Property<bool>("DrIsMain")
                        .HasColumnType("bit")
                        .HasColumnName("DR_IsMain");

                    b.Property<string>("DrLastModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("DR_LastModifiedBy");

                    b.Property<DateTime>("DrLastModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("DR_LastModifiedDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("DrLocalizableEntryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DR_LocalizableEntry_Id");

                    b.Property<string>("DrLongName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("DR_LongName");

                    b.Property<string>("DrShortName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("DR_ShortName");

                    b.Property<byte[]>("DrTimeStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion")
                        .HasColumnName("DR_TimeStamp");

                    b.HasKey("DrId");

                    b.HasIndex("DrLocalizableEntryId");

                    b.ToTable("DamageReasons", "pdc");
                });

            modelBuilder.Entity("chatbot_backend.Models.DraftForm", b =>
                {
                    b.Property<Guid>("DrfId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DRF_Id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("DrfCreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("DRF_CreatedBy");

                    b.Property<DateTime>("DrfCreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("DRF_CreatedDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("DrfDraftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DRF_DraftName");

                    b.Property<string>("DrfDraftNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("DRF_DraftNumber");

                    b.Property<string>("DrfJson")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DRF_Json");

                    b.Property<string>("DrfLastModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("DRF_LastModifiedBy");

                    b.Property<DateTime>("DrfLastModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("DRF_LastModifiedDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<byte[]>("DrfTimeStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion")
                        .HasColumnName("DRF_TimeStamp");

                    b.Property<string>("DrfUserName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("DRF_UserName");

                    b.HasKey("DrfId");

                    b.HasIndex(new[] { "DrfUserName", "DrfDraftName", "DrfDraftNumber" }, "IX_DraftForms_UserName_DraftName_DraftNumber")
                        .IsUnique()
                        .HasFilter("[DRF_DraftNumber] IS NOT NULL");

                    b.ToTable("DraftForms");
                });

            modelBuilder.Entity("chatbot_backend.Models.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Score")
                        .HasColumnType("real");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("chatbot_backend.Models.LocalizableEntry", b =>
                {
                    b.Property<Guid>("LleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LLE_Id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("LleCreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("LLE_CreatedBy");

                    b.Property<DateTime>("LleCreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("LLE_CreatedDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("LleLastModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("LLE_LastModifiedBy");

                    b.Property<DateTime>("LleLastModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("LLE_LastModifiedDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("LleLocalizableTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LLE_LocalizableType_Id");

                    b.Property<byte[]>("LleTimeStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion")
                        .HasColumnName("LLE_TimeStamp");

                    b.HasKey("LleId");

                    b.ToTable("LocalizableEntries", "mdm");
                });

            modelBuilder.Entity("chatbot_backend.Models.LocalizedEntry", b =>
                {
                    b.Property<Guid>("LlcId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LLC_Id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("LlcCreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("LLC_CreatedBy");

                    b.Property<DateTime>("LlcCreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("LLC_CreatedDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("LlcCultureCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("LLC_CultureCode");

                    b.Property<string>("LlcLastModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("LLC_LastModifiedBy");

                    b.Property<DateTime>("LlcLastModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("LLC_LastModifiedDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("LlcLocalizableEntryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LLC_LocalizableEntry_Id");

                    b.Property<string>("LlcLongTranslation")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("LLC_LongTranslation");

                    b.Property<string>("LlcShortTranslation")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("LLC_ShortTranslation");

                    b.Property<byte[]>("LlcTimeStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion")
                        .HasColumnName("LLC_TimeStamp");

                    b.HasKey("LlcId");

                    b.HasIndex(new[] { "LlcLocalizableEntryId" }, "IX_LocalizedEntries_LocalizableEntry_Id");

                    b.ToTable("LocalizedEntries", "mdm");
                });

            modelBuilder.Entity("chatbot_backend.Models.DamageReason", b =>
                {
                    b.HasOne("chatbot_backend.Models.LocalizableEntry", "DrLocalizableEntry")
                        .WithMany("DamageReasons")
                        .HasForeignKey("DrLocalizableEntryId")
                        .HasConstraintName("FK_DamageReasons_LocalizableEntries");

                    b.Navigation("DrLocalizableEntry");
                });

            modelBuilder.Entity("chatbot_backend.Models.LocalizedEntry", b =>
                {
                    b.HasOne("chatbot_backend.Models.LocalizableEntry", "LlcLocalizableEntry")
                        .WithMany("LocalizedEntries")
                        .HasForeignKey("LlcLocalizableEntryId")
                        .IsRequired()
                        .HasConstraintName("FK_LocalizedEntries_LocalizableEntries");

                    b.Navigation("LlcLocalizableEntry");
                });

            modelBuilder.Entity("chatbot_backend.Models.LocalizableEntry", b =>
                {
                    b.Navigation("DamageReasons");

                    b.Navigation("LocalizedEntries");
                });
#pragma warning restore 612, 618
        }
    }
}
